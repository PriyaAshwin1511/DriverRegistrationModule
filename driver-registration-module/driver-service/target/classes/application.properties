spring.datasource.driver-class.name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/driver_service
spring.datasource.username=priya
spring.datasource.password=Priya_1511
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
server.port=0
spring.application.name=driver-service

management.health.circuitbreakers.enabled=true
#Expose all end points. By default, actuator exposes only health related metrics.
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilience4j
#To see different states of CB.
resilience4j.circuitbreaker.instances.checkIn.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.checkIn.event-consumer-buffer-size=10
#CB will wait for 5 requests to fail before moving from closed to open state.
resilience4j.circuitbreaker.instances.checkIn.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.checkIn.slidingWindowSize=5
resilience4j.circuitbreaker.instances.checkIn.failureRateThreshold=50
#Time to wait in open state
resilience4j.circuitbreaker.instances.checkIn.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.checkIn.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.checkIn.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.checkIn.timeout-duration=3s

#Resilience4J Retry Properties
resilience4j.retry.instances.checkIn.max-attempts=3
#Wait for 5 seconds before retrying
resilience4j.retry.instances.checkIn.wait-duration=5s

spring.sleuth.integration.enabled=true
spring.zipkin.base-url=http://localhost:9411
# Trace 100% of requests
spring.sleuth.sampler.probability= 1.0